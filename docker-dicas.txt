=====================================================================
CONFIGURAÇÕES INICIAIS
=====================================================================

---------------------------------------------------------------------
Adicionando usuário ao grupo "docker"
---------------------------------------------------------------------
$ sudo gpasswd -a $USER docker 



=====================================================================
IMAGENS
=====================================================================

$ docker history <imagem>



---------------------------------------------------------------------
Baixar uma imagem
---------------------------------------------------------------------
$ docker pull [OPTIONS] NAME[:TAG|@DIGEST]

Options:
  -a, --all-tags                Download all tagged images in the repository
      --disable-content-trust   Skip image verification (default true)
      --platform string         Set platform if server is multi-platform capable
  -q, --quiet                   Suppress verbose output



---------------------------------------------------------------------
Criar uma imagem
---------------------------------------------------------------------
$ docker build [OPTIONS] PATH | URL | -

Options:
      --add-host list           Add a custom host-to-IP mapping (host:ip)
      --build-arg list          Set build-time variables
      --cache-from strings      Images to consider as cache sources
      --cgroup-parent string    Optional parent cgroup for the container
      --compress                Compress the build context using gzip
      --cpu-period int          Limit the CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int           Limit the CPU CFS (Completely Fair Scheduler) quota
  -c, --cpu-shares int          CPU shares (relative weight)
      --cpuset-cpus string      CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string      MEMs in which to allow execution (0-3, 0,1)
      --disable-content-trust   Skip image verification (default true)
  -f, --file string             Name of the Dockerfile (Default is 'PATH/Dockerfile')
      --force-rm                Always remove intermediate containers
      --iidfile string          Write the image ID to the file
      --isolation string        Container isolation technology
      --label list              Set metadata for an image
  -m, --memory bytes            Memory limit
      --memory-swap bytes       Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --network string          Set the networking mode for the RUN instructions during build (default "default")
      --no-cache                Do not use cache when building the image
      --pull                    Always attempt to pull a newer version of the image
  -q, --quiet                   Suppress the build output and print image ID on success
      --rm                      Remove intermediate containers after a successful build (default true)
      --security-opt strings    Security options
      --shm-size bytes          Size of /dev/shm
  -t, --tag list                Name and optionally a tag in the 'name:tag' format
      --target string           Set the target build stage to build.
      --ulimit ulimit           Ulimit options (default [])



---------------------------------------------------------------------
Listar imagens disponíveis
---------------------------------------------------------------------
$ docker images <OPTIONS>

Options:
  -a, --all             Show all images (default hides intermediate images)
      --digests         Show digests
  -f, --filter filter   Filter output based on conditions provided
      --format string   Pretty-print images using a Go template
      --no-trunc        Don't truncate output
  -q, --quiet           Only show image IDs



---------------------------------------------------------------------
Apagar uma imagem
---------------------------------------------------------------------
$ docker rmi [OPTIONS] IMAGE [IMAGE...]

Options:
  -f, --force      Force removal of the image
      --no-prune   Do not delete untagged parents



=====================================================================
CONTAINERS
=====================================================================
---------------------------------------------------------------------

Gerenciamento de containers
---------------------------------------------------------------------
$ docker attach <container>
$ docker diff <container>
$ docker events <container>
$ docker inspect <container>
$ docker kill <container>
$ docker logs <container>
$ docker pause <container>
$ docker port <container>
$ docker restart <container>
$ docker stats <container>
$ docker stop <container>
$ docker top <container>
$ docker unpause <container>
$ docker wait <container>
$ docker rename <container>



---------------------------------------------------------------------
Conectar a um container (prompt)
---------------------------------------------------------------------
$ docker exec -it <container> bash



---------------------------------------------------------------------
Apagar um container
---------------------------------------------------------------------
$ docker rm [OPTIONS] CONTAINER [CONTAINER...]

Options:
  -f, --force     Force the removal of a running container (uses SIGKILL)
  -l, --link      Remove the specified link
  -v, --volumes   Remove anonymous volumes associated with the container



---------------------------------------------------------------------
Listar containers
---------------------------------------------------------------------
$ docker ps <OPTIONS>

Options:
  -a, --all             Show all containers (default shows just running)
  -f, --filter filter   Filter output based on conditions provided
      --format string   Pretty-print containers using a Go template
  -n, --last int        Show n last created containers (includes all states) (default -1)
  -l, --latest          Show the latest created container (includes all states)
      --no-trunc        Don't truncate output
  -q, --quiet           Only display container IDs
  -s, --size            Display total file sizes



=====================================================================
VOLUMES
=====================================================================
$ docker volume <COMMAND>

Commands:
  create      Create a volume
  inspect     Display detailed information on one or more volumes
  ls          List volumes
  prune       Remove all unused local volumes
  rm          Remove one or more volumes



=====================================================================
NETWORKS
=====================================================================
$ docker network COMMAND

Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks



=====================================================================
EXEMPLOS
=====================================================================


---------------------------------------------------------------------
Postgres
---------------------------------------------------------------------
$ docker run --name postgres-0 --rm -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=4y7sV96vA9wv46VR -e PGDATA=/var/lib/postgresql/data/pgdata -v /tmp:/var/lib/postgresql/data -p 5432:5432 -it postgres:alpine

docker exec -it postgres-0 /bin/sh
